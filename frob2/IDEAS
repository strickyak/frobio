IDEAS TODO:

Memory bug in dig.
DNS Extensions corretly in dig.

Port to OS9. Level1.
Port to non-OS9.
Shared LibFrobio module?

Device Drivers:
  Wiz, UDP, TCP, Resolve
FUSE Manager/driver.
Tap into CCIO.

Telnet into OS9 Shell.
Telnet into CCIO Text. Graphics?
Terminfo for NitrOS9.

UnixLooknFeel:
  Bournish shell
  real Argv & Envp
  ULF.* commands
Rebuild NCL.
  make f.ncl.os9 (has simple errors)

Thats when I reach for my resolver!

Rename API with consistent CamelCase, separating frobio API from any Unix or other API.

IRC client.

Omnitrix (reliable UDP monster).
  -- shard memory.
  -- omni daemon.

Security:
  SSL/TLS?
  RC4? RC49?
  MD2?
  Secretmail
  Bignum lib.

/wiz/raw:
  Packets to R and W to the wiznet chip.
  r: read bytes from wiznet
  w: write bytes to wiznet
  c: send one-byte command and wait for 0.
  i: pull in from a circular buffer
  o: push out to a circular buffer.
  x: reset wiznet.
  z: wait on an outcome (set of possible results).


Compile with gcc, perhaps omit frame pointer:
  -- alias CC='/opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 -std=c99'
  -- CC -c -I.. froblib/buf.c
  -- CC -c -I..  -fomit-frame-pointer wiz/wiz5100s.c   froblib/buf.c froblib/flag.c froblib/format.c froblib/malloc.c froblib/nylib.c froblib/nystdio.c froblib/std.c
  -- CC -Wall -S -I..  -fomit-frame-pointer wiz/wiz5100s.c   froblib/buf.c froblib/flag.c froblib/format.c froblib/malloc.c froblib/nylib.c froblib/nystdio.c froblib/std.c os9/frobos9.c


------------------------------------------------
32061   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99 -fno-builtin -S -I..  zhello.c 
32062   m zhello.s
32063   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99 -fno-builtin -c -I..  zhello.c 
32064   file zhello.o
32065   m zhello.o
32066   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99 -fno-builtin -S -I..  zhello.c 
32067   m zhello.s
32068   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99 -fno-builtin  -I..  zhello.c 
32069   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=c++98 -fno-builtin  -I..  zhello.c 
32070   ln -s /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 /opt/yak/fuzix/bin/g++
32071   /opt/yak/fuzix/bin/g++ -I.. -S zhello.c 
32072   m zhello.s 
32073   vi zhello.c 
32074   /opt/yak/fuzix/bin/g++ -I.. -S zhello.c 
32075   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=c++98 -fno-builtin  -I..  '-###' zhello.c 
32076   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=c++98 -fno-builtin  -I..   zhello.c 
32077   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99 -fno-builtin  -I..   zhello.c 
32078   vi zhello.c
32079   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99 -fno-builtin  -I..   zhello.c 
32080   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I..   zhello.c 
32081   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I.. -v  zhello.c 
32082   /opt/yak/fuzix/libexec/gcc/m6809-unknown/4.6.4/collect2 /opt/yak/fuzix/lib/gcc/m6809-unknown/4.6.4/crt0.o -L/opt/yak/fuzix/lib/gcc/m6809-unknown/4.6.4 -L/opt/yak/fuzix/lib/gcc/m6809-unknown/4.6.4/../../../../m6809-unknown/lib /tmp/ccGwbFS3.o 
32083   file /opt/yak/fuzix/lib/gcc/m6809-unknown/4.6.4/crt0.o
32084   hd /opt/yak/fuzix/lib/gcc/m6809-unknown/4.6.4/crt0.o |head
32085   p lwobjdump /opt/yak/fuzix/lib/gcc/m6809-unknown/4.6.4/crt0.o
32086   ff /opt/yak/fuzix/lib/gcc/
32087   p ff /opt/yak/fuzix/lib/gcc/
32088   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I.. -v -S  zhello.c 
32089   m zhello.s 
32090   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=c11  -I.. -v -S  zhello.c
32091   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu11  -I.. -v -S  zhello.c
32092   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu11  -I..  -S  zhello.c
32093   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I.. -v -S  zhello.c
32094   vi zhello.c
32095   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I.. -v -S  zhello.c
32096   cat zhello.c 
32097   vi zhello.c 
32098   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I.. -v -S  zhello.c
32099   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I..  -S  zhello.c
32100   cat zhello.s
32101   vi zhello.s
32102   vi zhello.c
32103   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I..  -S  zhello.c
32104   n zhello.s
32105   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I.. -O2 -S  zhello.c
32106   n zhello.s
32107   /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99  -I.. -Os -S  zhello.c
32108   n zhello.s
32109   history 50
32110   history 50 >> IDEAS 
------------------------------------------------
  -f"whole-program"  -f"lto"[=n]
  -f"inline-functions"
------------------------------------------------
extern int puts(const char *s);

/*
class Foo {
  public:
    void bar() {
      puts("hello world");
    }
}
*/

inline void Greet() { 
      puts("hello world");
}

int main() {
  Greet();
  asm (
    "   NOP foobar  "
  );
  unsigned int a=100, b=200, c=300;
  for (unsigned i = 0; i < a; i++) Greet();
  for (unsigned i = 0; i < b; i++) Greet();
  for (unsigned i = 0; i < c; i++) Greet();
  return 13;
}
------------------------------------------------
32145   HOW=gcc make -B x.logging.os9 
32146   ls *.s
32147   cmoc -o a.out --os9 *.s 
32148   HOW=gcc make -B x.logging.os9 
32149   ll *.c.o
32150   HOW=gcc make -B x.logging.os9 
32151   ll *.o
32152   rm *.o
32153   make clean 
32154   HOW=gcc make -B x.logging.os9 
32155   ll *.o
32156   ll *.s
32157   HOW=gcc make -B x.logging.os9 
32158   ll *.s
32159   ll *.o
32160   cmoc --os9 -o a.out *.o 
32161   cmoc -i --os9 -o a.out *.o 
32162   ls -t
32163   m a.link 
32164   m x-logging.s
32165   g mul *.s
32166   m format.s 
32167   g __ format.s
32168   m format.s 
32169   g -i ini *.s
32170   p lwobjdump format.o
32171   mkdir Z11
32172   cp *.s *.o Z11 
32173   HOW=gcc make -B x.logging.os9 
32174   ll format.s Z11/format.s
32175   vimdiff format.s Z11/format.s 
32176   p lwobjdump format.o
32177   vi crt_gcc.asm 
32178   fg
32179   cmoc -i --os9 -nodefaultlibs -o a.out *.o 
32180   fg
32181   cmoc -i --os9 -nodefaultlibs -o a.out *.o crt_gcc.asm 
32182   cmoc -i --raw -nodefaultlibs -o a.out *.o crt_gcc.asm 
32183   cmoc -i --raw --void-target -nodefaultlibs -o a.out *.o crt_gcc.asm 
32184   ls
32185   m x-logging.s
32186   cmoc -i --raw --void-target -nodefaultlibs -o a.out *.o crt_gcc.asm 
32187   lwlink-orig --format=raw --output=a.out --script=a.link --map=a.map buf.o crt_gcc.o flag.o format.o frobos9.o malloc.o nylib.o nystdio.o stack300.o std.o wiz5100s.o x-logging.o 
32188   n a.link
32189   vi a.link
32190   lwlink-orig --format=raw --output=a.out --script=a.link --map=a.map buf.o crt_gcc.o flag.o format.o frobos9.o malloc.o nylib.o nystdio.o stack300.o std.o wiz5100s.o x-logging.o 
32191   m x-logging.o 
32192   m x-logging.s
32193   history 50 
32194   history 50 >> IDEAS 
------------------------------------------------
-mint8 works.
-mno-reg-args works.
-m6309 accepted, no change.
-mdret works (return in D, not X)

------------------------------------------------
This seems to have worked:

/opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99 -fno-builtin -funsigned-char -funsigned-bitfields -Os -S -fwhole-program  -fpic zhello.c
alias ASM="lwasm --obj --pragma=undefextern --pragma=cescapes --pragma=importundefexport --pragma=newsource"
ASM -o whole-pic.o -lwhole-pic.list  whole-pic.asm

Not sure why the combination of -f'whole-program' and -f'pic' did not work last night.
------------------------------------------------
https://raw.githubusercontent.com/haikuports/haikuports/master/dev-embedded/gcc6809/patches/gcc6809-4.6.4.patchset
March 2019 patch set.
https://github.com/haikuports/haikuports/tree/master/dev-embedded/gcc6809
------------------------------------------------
https://gcc.gnu.org/onlinedocs/gcc-4.6.4/gccint/
------------------------------------------------
Wednesday:
   * Rename UDP/FrobNet camel style.
   * use prob in UDP/FrobNet
   * Compile for RSB!?
   * Monster Command
   * Monster Shell
   * All flags 1 word: --flag=1
   * Longer timeout for Socketless (0.5s * (1+3) = 2.0s).
   * Make UDP timeout with NotYet.



------------------------------------------------
/sy/frobio/frob2$ cat z2.c froblib/*.c  decb/*.c  > z2a.c && /opt/yak/fuzix/bin/m6809-unknown-gcc-4.6.4 --std=gnu99 -funsigned-char -funsigned-bitfields -S -I.. -Os -fwhole-program  z2a.c  && lwasm --obj --pragma=undefextern --pragma=cescapes --pragma=importundefexport --pragma=newsource --list=z2a.list --map=z2a.map  -I.. -o z2a.o z2a.s  && lwlink --format=decb --entry=_main -o z2z.bin --map=z2z.map -s decb.script z2a.o -L/opt/yak/fuzix/lib/gcc/m6809-unknown/4.6.4/ -lgcc && scp z2z.bin root@yak.net:/tmp/
In file included from z2a.c:1:0:
../frob2/froblib.h:67:6: warning: conflicting types for built-in function 'strcat' [enabled by default]
../frob2/froblib.h:79:6: warning: conflicting types for built-in function 'printf' [enabled by default]
../frob2/froblib.h:80:6: warning: conflicting types for built-in function 'putchar' [enabled by default]
+ lwasm-orig --obj --pragma=undefextern --pragma=cescapes --pragma=importundefexport --pragma=newsource --list=z2a.list --map=z2a.map -I.. -o z2a.o z2a.s -l.list
+ lwlink-orig --format=decb --entry=_main -o z2z.bin --map=z2z.map -s decb.script z2a.o -L/opt/yak/fuzix/lib/gcc/m6809-unknown/4.6.4/ -lgcc
z2z.bin                                                                                                                                                     100% 7710   140.6KB/s   00:00
/sy/frobio/frob2$
------------------------------------------------

Borne Shell Ideas:
  Postpone ENV?
  Postpone BG?
  Postpone $* $1 $2 $3 shift
  Postpone case
  Postpone read
  Postpone Subshells
  set only -e -x etc.

Subshells need
  * Vars
  * Env
  * Redirects
  * Flag modes -e -x etc.

echo "Hello; $x!"
  -- Use "" and '' to build words, then shed.
  -- Then just join on spaces for params to exec
  -- Commands that want filenames get them.
  -- the echo command gets all but quotes
  Broken: Empty String as an argument.
  However: if Dash Options require = (e.g. -color=red)
    (defaulting to 1 if no =) then empty option
    is available: -prefix=

Unix Look And Feel Capabilities:
  -- Edition Number comes after name.
  -- Follow that with $ABCF
  -- Followed by lowercase letters "a"=argv "e"=env
  -- if needed, lowercase letter could be followed by decimal digits.
               ( like for sizes of Capabilities )
  -- followed by $00


==============================================
git push -u origin bufferless
==============================================

m6809_override_options() in m6809.c

```
int goose;
__attribute__((section("hasxxx"))) int goosexxx;

int gander;
__attribute__((section("hasxxx"))) int ganderxxx;
```

YIELDS

```
	.area .bss
	.globl	_goose
_goose:	.blkb	2
	.globl _goosexxx
	.area	hasxxx
_goosexxx:
	.word	0	;skip space 2
	.area .bss
	.globl	_gander
_gander:	.blkb	2
	.globl _ganderxxx
	.area	hasxxx
_ganderxxx:
	.word	0	;skip space 2
```


-- Grep section_op in m6809.c

gcc6809 -S -I.. -std=gnu99 -nostdlib -dP -mcode-section=NANDO  yadd.c
```
;;; gcc for m6809 : Nov 22 2019 00:09:58
;;; 4.6.4 (gcc6809lw pl6)
;;; ABI version 1
;;; -mint16
        .module yadd.c
        .area NANDO
        .globl _hexdigit
_hexdigit:
; (insn/f 36 4 37 (parallel [
```


config/h8300/h8300.md uses SYMBOL_REF_FLAG in .md file
```
(define_insn "call"
  [(call (match_operand:QI 0 "call_insn_operand" "or")
	 (match_operand:HI 1 "general_operand" "g"))]
  ""
  "*
{
  if (GET_CODE (XEXP (operands[0], 0)) == SYMBOL_REF
      && SYMBOL_REF_FLAG (XEXP (operands[0], 0)))
    return \"jsr\\t@%0:8\";
  else
    return \"jsr\\t%0\";
}"
  [(set_attr "type" "call")
   (set (attr "length")
	(if_then_else (match_operand:QI 0 "small_call_insn_operand" "")
		      (const_int 2)
		      (const_int 4)))])
```

rtl.h
```
/* Subsequent bits are available for the target to use.  */
#define SYMBOL_FLAG_MACH_DEP_SHIFT      9
#define SYMBOL_FLAG_MACH_DEP            (1 << SYMBOL_FLAG_MACH_DEP_SHIFT)
```

-------------------------------

Assembly Language Programming for the Color Computer, Tepolt, 1985:

p215: POLCAT   [$A000]
Modifies: A & CC.
Key pressed: Z=0, A=ascii
No key: Z=1, A=0

CHROUT     [$A002]
    Displays ascii A reg
    DP=0

p213: DISPL   $B99C
In: DP=0 X=string
  string starts with " and ends with " (quotes not displayed)
  $0D causes CR/LF.

CLSCRN   $A928
   clears screen; display pointer set to $0400.

Extended Color Basic Memory Usage
    0000    Internal
    0400    Text Screen
    0600    Graphics Screen
    0601+(N*600)   Basic Statements start   [0019] points to start
            Numeric Variables               [001b] points to start

    Relativey Safe Gap 2600 to 3E00 (7E00)

ending:
    3ed0 (7ed0)  Unused
    3f36 (7f36)  S Stack ^   ( ~ 100 bytes ) 
    3fff (7fff)  String Variables (200 bytes)

CLEAR 200, &H3000    ( reserve 200 string, stop ram at 3000 )

CFNBUF  01D1  RMB 9    ; cassette filename
CASBUF  01DA  RMB 256  ; cassette buffer
LINHDR  01DA  RMB 2    ; line input buffer header
LINBUF  02DC  RMB LBUFMX+1  ; basic line input buffer

VIDRAM  0400  RMB 200

;;;; DISK BASIC ONLY:  otherwise Graphics screens?
DBUF0   0600  RMB 100   ; i/o buffer #0
DBUF1   0700  RMB 100   ; i/o buffer #1
FATBL0   0800  RMB FATLEN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

ctrl=189 up=94=^ left=8 right=9 down=10 alt=64=@  clear=12
shift-ctrl=1 s-up=95=_ s-left=21 s-right=93=] sdown=91 s-alt=19  s-@=19 shift-clr=92=\
f1=103=g f2=4   shift-f1=52=4 shift-f2=214    s-enter=enter=13  s-break=break=3

;;;;;;;;;;;;;;;;;;;;

How to load flash rom in CocoSDC:

LOADM "NETBOOT.DEC"
KILL MEM @4
WRITE MEM @4, &H2600, &HC000, 8190
RUN @4

;;;;;;;;;;;;;;;;

How can I avoid the $63 bytes of crt.ecb_o ?

This is my script:
$ cat -n netboot.link.PLAIN
     1	define basesympat s_%s
     2	define lensympat l_%s
     3	section start load 2600
     4	section code
     5	section rodata
     6	section bss,bss
     7	entry program_start

lwlink-orig --map=netboot.coco.map --format=raw --output=netboot.coco --script=netboot.link.PLAIN  --map=netboot.map -L/opt/yak/cmoc/share/cmoc/lib -L/tmp -lcmoc-crt-zap -lcmoc-std-ecb /opt/yak/cmoc/share/cmoc/lib/float-ctor.ecb_o -lcmoc-float-ecb preboot.o netboot.o

I can remove the float:

lwlink-orig --map=netboot.coco.map --format=raw --output=netboot.coco --script=netboot.link.PLAIN  --map=netboot.map -L/opt/yak/cmoc/share/cmoc/lib -L/tmp -lcmoc-crt-zap -lcmoc-std-ecb  preboot.o netboot.o

/tmp/libcmoc-crt-zap.a is libcmoc-crt-ecb.a with crt.ecb_o removed.

Otherwise crt.ecb_o gets included, and cannot find program_end or INITGL.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MMU set up by BASIC on coco3/cocoSDC seems to be:
    38  39  3a  8b  3c  3d  3e  3f
    38  30  31  32  33  3d  35  3f
    ^^                  ^^      ^^  (same)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

scp root@yak.net:/tmp/netboot.exp .  && decb copy -2 -b -r netboot.exp /media/strick/APRIL3/z,NETBOOT.DEC ; decb dir /media/strick/APRIL3/z ; sync ; bat

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[bootrom/GO.BAS]

10 KILL MEM24
20 LOADM "NETBOOT.DEC"
30 WRITE MEM@4, &H3000, &HC000, 8192
40 RUN @4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[cmoc]
$ sh RomCompile.sh bootrom/netboot.c  && bootrom/decb-reposition-3000 netboot.decb && bootrom/expand2000 < netboot.decb > netboot.exp && scp netboot.exp root@yak.net:/tmp/

[gcc -O0]
$ COMPILER=gcc sh RomCompile.sh bootrom/netboot.c  && bootrom/decb-reposition-3000 netboot.decb && bootrom/expand2000 < netboot.decb > netboot.exp && scp netboot.exp root@yak.net:/tmp/

[gcc -O1]
$ OPT=-O1 COMPILER=gcc sh RomCompile.sh bootrom/netboot.c  && bootrom/decb-reposition-3000 netboot.decb && bootrom/expand2000 < netboot.decb > netboot.exp && scp netboot.exp root@yak.net:/tmp/

[gcc -Os]
$ OPT=-Os COMPILER=gcc sh RomCompile.sh bootrom/netboot.c  && bootrom/decb-reposition-3000 netboot.decb && bootrom/expand2000 < netboot.decb > netboot.exp && scp netboot.exp root@yak.n

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
For coco2 with 64K RAM?  Poke any to $FFDE Normal (ROM), $FFDF No Rom.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
from Color Basic Unravelled:

01DA : CASBUF RMB 256    (Cassette File Data Buffer)

02DC : LINBUF RMBUF  LBUFMX+1  (Basic Line Input Buffer)

03D7 : STRBUF RMB 41       ( string buffer )

0400 : VIDRAM RMB $200

                 LBUFMX EQU 250
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PXE Boot
DHCP options 66 & 67
NBP (Network Boot Program) (Windows Preinstallation Environment)
proxyDHCP

RFC1918
https://en.wikipedia.org/wiki/Private_network
A) 10/8
B) 172.16/12
C) 192.168/16

Proposal:
Try the following boots in sequence, then repeat the sequence:
1. DHCP + (DHCP-provided resolver or 8.8.8.8) + nekot.yak.net
2. 10.68.9.99/8    talking to .11 as gateway, resolver, and waiter.
3. 172.16.89.99/12 talking to .11 as gateway, resolver, and waiter.
4. 192.168.9.99/16 talking to .11 as gateway, resolver, and waiter.
Then things work on either a public internet or on any of 3 private nets,
hoping at least one of them doesn't conflict with other private nets
you are on (VPN or Home Wifi Masquarade).

If it jumps on Nekot too soon, no big deal, use Nekot to go elsewhere.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Where is corrupt in $C0xx and $C8xx ?

2023/03/09 00:54:44 ReadFive: got data
2023/03/09 00:54:44 M $c000 444b 1a50 5f1f 9b30 8d00 2710 8e04 00a6 8484 3fa7 a0a6 802a f617 1209 1a50 308d DK.P_..0..'....&..?' &.*v....P0.
2023/03/09 00:54:44 M $c020 0010 108e 0500 a684 843f a7a2 a680 2af6 20fe 202d 2d20 5354 5249 434b 5941 4b20 ......&..?'"&.*v ~ -- STRICKYAK
2023/03/09 00:54:44 M $c040 4652 4f42 494f 2050 5245 424f 4f54 202d 2da0 ffff ffff ffff ffff ffff ffff ffff FROBIO PREBOOT -- ..............
2023/03/09 00:54:44 M $c060 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................
2023/03/09 00:54:44 M $c080 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................
2023/03/09 00:54:44 M $c0a0 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................
2023/03/09 00:54:44 M $c0c0 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ff7e e29d ffff ffff .........................~b.....
2023/03/09 00:54:44 M $c0e0 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................

2023/03/09 00:54:44 ReadFive: got data
2023/03/09 00:54:44 M $c800 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................
2023/03/09 00:54:44 M $c820 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................
2023/03/09 00:54:44 M $c840 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................
2023/03/09 00:54:44 M $c860 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................
2023/03/09 00:54:44 M $c880 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................
2023/03/09 00:54:44 M $c8a0 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff 1212 1212 1212 1212 1212 12ff ................................
2023/03/09 00:54:44 M $c8c0 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................
2023/03/09 00:54:44 M $c8e0 ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ffff ................................

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

I see Coco3 BASIC (COCO3.ROM) setting up the MMU thus on reset:

GIME MmuTask <- 0; clock rate <- false
GIME MmuMap[0][0] <- 38  (was 00)
GIME MmuMap[0][1] <- 39  (was 39)
GIME MmuMap[0][2] <- 34  (was 3a)
GIME MmuMap[0][3] <- 3b  (was 3b)
GIME MmuMap[0][4] <- 3c  (was 3c)
GIME MmuMap[0][5] <- 3d  (was 3d)
GIME MmuMap[0][6] <- 3e  (was 3e)
GIME MmuMap[0][7] <- 3f  (was 3f)
GIME MmuMap[1][0] <- 38  (was 00)
GIME MmuMap[1][1] <- 30  (was 39)
GIME MmuMap[1][2] <- 31  (was 3a)
GIME MmuMap[1][3] <- 32  (was 3b)
GIME MmuMap[1][4] <- 33  (was 3c)
GIME MmuMap[1][5] <- 3d  (was 3d)
GIME MmuMap[1][6] <- 35  (was 3e)
GIME MmuMap[1][7] <- 3f  (was 3f)
GIME MmuEnable <- true
(...)
GIME MmuMap[0][2] <- 3a  (was 34)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

In fact, here is everything I logged during the reset.
but I'm afraid the first part is my initialization,
not running the ROM.

Super Basic Reset

$ go run --tags=coco3,level2 gomar.go -t 1 -rom_8000  rom/BASIC3.ROM
GIME ff90 <= 6c
GIME MmuEnable <- true
GIME ff91 <= 00
GIME MmuTask <- 0; clock rate <- false
GIME ff92 <= 00
GIME		IRQ bits: $00=|||||||
GIME ff93 <= 00
GIME		FIRQ bits: $00=|||||||
GIME ff94 <= 09
GIME		Timer=$900 Start!
GIME ff95 <= 00
GIME		Timer=$900
GIME ff96 <= 00
GIME		reserved
GIME ff97 <= 00
GIME		reserved
GIME ff98 <= 03
GIME		GraphicsNotAlpha=0 AttrsIfAlpha=0 Artifacting=0 Monochrome=0 50Hz=0 LinesPerCharRow=3=8.
GIME ff99 <= 20
GIME		LinesPerField=1=200. HRES=0 CRES=0
GIME ff9a <= 00
GIME		Border: rgb=$00=(0,0,0)
GIME ff9b <= 00
GIME		512K bank selector: 00
GIME ff9c <= 00
GIME		Virt Scroll (alpha) = 0
GIME ff9d <= 3c
GIME		VirtOffsetAddr=$1e000
GIME ff9e <= 01
GIME		VirtOffsetAddr=$1e008
GIME ff9f <= 00
GIME		HVEN=0 HorzOffsetAddr=0
GIME ff90 <= 0a
GIME MmuEnable <- false
GIME ffb0 <= 12
GIME		$ffb0: palette[$0] <- rgb=$12=(0,3,0)
GIME ffb1 <= 12
GIME		$ffb1: palette[$1] <- rgb=$12=(0,3,0)
GIME ffb2 <= 12
GIME		$ffb2: palette[$2] <- rgb=$12=(0,3,0)
GIME ffb3 <= 12
GIME		$ffb3: palette[$3] <- rgb=$12=(0,3,0)
GIME ffb4 <= 12
GIME		$ffb4: palette[$4] <- rgb=$12=(0,3,0)
GIME ffb5 <= 12
GIME		$ffb5: palette[$5] <- rgb=$12=(0,3,0)
GIME ffb6 <= 12
GIME		$ffb6: palette[$6] <- rgb=$12=(0,3,0)
GIME ffb7 <= 12
GIME		$ffb7: palette[$7] <- rgb=$12=(0,3,0)
GIME ffb8 <= 12
GIME		$ffb8: palette[$8] <- rgb=$12=(0,3,0)
GIME ffb9 <= 12
GIME		$ffb9: palette[$9] <- rgb=$12=(0,3,0)
GIME ffba <= 12
GIME		$ffba: palette[$a] <- rgb=$12=(0,3,0)
GIME ffbb <= 12
GIME		$ffbb: palette[$b] <- rgb=$12=(0,3,0)
GIME ffbc <= 12
GIME		$ffbc: palette[$c] <- rgb=$12=(0,3,0)
GIME ffbd <= 12
GIME		$ffbd: palette[$d] <- rgb=$12=(0,3,0)
GIME ffbe <= 12
GIME		$ffbe: palette[$e] <- rgb=$12=(0,3,0)
GIME ffbf <= 12
GIME		$ffbf: palette[$f] <- rgb=$12=(0,3,0)
GIME ffa0 <= 38
GIME MmuMap[0][0] <- 38  (was 00)
GIME ffa1 <= 39
GIME MmuMap[0][1] <- 39  (was 39)
GIME ffa2 <= 34
GIME MmuMap[0][2] <- 34  (was 3a)
GIME ffa3 <= 3b
GIME MmuMap[0][3] <- 3b  (was 3b)
GIME ffa4 <= 3c
GIME MmuMap[0][4] <- 3c  (was 3c)
GIME ffa5 <= 3d
GIME MmuMap[0][5] <- 3d  (was 3d)
GIME ffa6 <= 3e
GIME MmuMap[0][6] <- 3e  (was 3e)
GIME ffa7 <= 3f
GIME MmuMap[0][7] <- 3f  (was 3f)
GIME ffa8 <= 38
GIME MmuMap[1][0] <- 38  (was 00)
GIME ffa9 <= 30
GIME MmuMap[1][1] <- 30  (was 39)
GIME ffaa <= 31
GIME MmuMap[1][2] <- 31  (was 3a)
GIME ffab <= 32
GIME MmuMap[1][3] <- 32  (was 3b)
GIME ffac <= 33
GIME MmuMap[1][4] <- 33  (was 3c)
GIME ffad <= 3d
GIME MmuMap[1][5] <- 3d  (was 3d)
GIME ffae <= 35
GIME MmuMap[1][6] <- 35  (was 3e)
GIME ffaf <= 3f
GIME MmuMap[1][7] <- 3f  (was 3f)
GIME ff90 <= ce
GIME MmuEnable <- true
GIME ff94 <= ff
GIME		Timer=$ff00 Start!
GIME ff95 <= ff
GIME		Timer=$ffff
GIME ff98 <= 00
GIME		GraphicsNotAlpha=0 AttrsIfAlpha=0 Artifacting=0 Monochrome=0 50Hz=0 LinesPerCharRow=0=1.
GIME ff99 <= 00
GIME		LinesPerField=0=192. HRES=0 CRES=0
GIME ff9a <= 00
GIME		Border: rgb=$00=(0,0,0)
GIME ff9b <= 00
GIME		512K bank selector: 00
GIME ff9c <= 0f
GIME		Virt Scroll (alpha) = f
GIME ff9d <= e0
GIME		VirtOffsetAddr=$70008
GIME ff9e <= 00
GIME		VirtOffsetAddr=$70000
GIME ff9f <= 00
GIME		HVEN=0 HorzOffsetAddr=0
GIME ff90 <= ca
GIME MmuEnable <- true
GIME ff90 <= c8
GIME MmuEnable <- true
GIME ff90 <= ca
GIME MmuEnable <- true
GIME ff90 <= ce
GIME MmuEnable <- true
GIME ffb0 <= 12
GIME		$ffb0: palette[$0] <- rgb=$12=(0,3,0)
GIME ffb1 <= 24
GIME		$ffb1: palette[$1] <- rgb=$24=(3,0,0)
GIME ffb2 <= 0b
GIME		$ffb2: palette[$2] <- rgb=$0b=(0,1,3)
GIME ffb3 <= 07
GIME		$ffb3: palette[$3] <- rgb=$07=(1,1,1)
GIME ffb4 <= 3f
GIME		$ffb4: palette[$4] <- rgb=$3f=(3,3,3)
GIME ffb5 <= 1f
GIME		$ffb5: palette[$5] <- rgb=$1f=(1,3,3)
GIME ffb6 <= 09
GIME		$ffb6: palette[$6] <- rgb=$09=(0,0,3)
GIME ffb7 <= 26
GIME		$ffb7: palette[$7] <- rgb=$26=(3,1,0)
GIME ffb8 <= 00
GIME		$ffb8: palette[$8] <- rgb=$00=(0,0,0)
GIME ffb9 <= 12
GIME		$ffb9: palette[$9] <- rgb=$12=(0,3,0)
GIME ffba <= 00
GIME		$ffba: palette[$a] <- rgb=$00=(0,0,0)
GIME ffbb <= 3f
GIME		$ffbb: palette[$b] <- rgb=$3f=(3,3,3)
GIME ffbc <= 00
GIME		$ffbc: palette[$c] <- rgb=$00=(0,0,0)
GIME ffbd <= 12
GIME		$ffbd: palette[$d] <- rgb=$12=(0,3,0)
GIME ffbe <= 00
GIME		$ffbe: palette[$e] <- rgb=$00=(0,0,0)
GIME ffbf <= 26
GIME		$ffbf: palette[$f] <- rgb=$26=(3,1,0)
GIME ffa2 <= 3a
GIME MmuMap[0][2] <- 3a  (was 34)
# pre timer interrupt #
# pre timer interrupt #
# pre timer interrupt #

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Level1:

Addr Size Ty Rv At Uc   Name
---- ---- -- -- -- -- ---------
EE06   99 C1  5 r   0 REL
EE9F  7ED C1  0 r   0 Krn
F698  54B C1  0 r   1 KrnP2
FBE3   6E C0  0 r   2 Init
FC51  1AC C1  0 r   1 Boot

B500  70A C1  0 r   1 IOMan
BC0A  DE5 D1  0 r   0 RBF
C9EF  54F E1  1 r   0 rb1773
CF3E   2F F1  0 r   0 D0
CF6D   2F F1  0 r   0 D1
CF9C   2F F1  0 r   0 D2
CFCB   2F F1  0 r   0 DD
CFFA  6D3 D1  0 r   2 SCF
D6CD  866 E1  0 r   2 VTIO
DF33  2C2 C1  0 r   1 CoVDG
E1F5   3C F1  0 r   2 Term
E231  1BC E1  0 r   0 scbbp
E3ED   3A F1  0 r   0 p
E427  18A E1  0 r   0 scbbt
E5B1   3B F1  0 r   0 T1
E5EC  23E D1  0 r   0 PipeMan
E82A   28 E1  0 r   0 Piper
E852   26 F1  0 r   0 Pipe
E878  174 C1  8 r   1 Clock
E9EC   66 21  0 r   1 Clock2
EA52  1E3 11  3 r   1 SysGo

A200  627 11  0 r   1 Shell
9F00  238 11  0 r   1 Mdir

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:~/OS9/nitros9/level1/coco1/modules$ cat ../../modules/boot_lemma.asm 
********************************************************************
* Boot - NitrOS-9 Lemma Boot Module
*
* $Id: boot_lemma.asm,v 1.2 2023/03/16 07:16:54 strick Exp strick $
*
* Edt/Rev  YYYY/MM/DD  Modified by
* Comment
* ------------------------------------------------------------------
*   1      2023/03/15  Henry Strickland W6REK (github.com/strickyak)
*
* Created, based on boot_rom by Boisy G. Pitre for boilerplate,
*          and Michael Furman N6IL's cocoio-dw repository
*          (github.com/n6il).

******
*
* Lemma Definitions
Q.BfBegin equ 211  ; quint { cmd total_size.hi total_size.lo 0 0 }
Q.BfChunk equ 212  ; quint { cmd chunk_size.hi chunk_size.lo 0 0 }
Q.BfEnd   equ 213  ; quint { cmd total_size.hi total_size.lo 0 0 }

;; Page 0 between $11 and $20 is unused in OS9 Level 1.
;; TODO use stack instead.  Drivewire scribbles stats here.
BeginPtr  equ $12
CurrPtr   equ $14
Quint     equ $16
QuintN    equ $17
QuintSize equ 5     ; quint is 5 bytes
*
******

         nam   Boot
         ttl   NitrOS-9 Level 1 Lemma Boot Module

         ifp1
         use   defsfile
         use   cocoio.d
         use   w5100s.d
         endc

tylg     set   Systm+Objct
atrv     set   ReEnt+rev
rev      set   $01
edition  set   1

         mod   eom,name,tylg,atrv,start,size

size     equ   .

name     fcs   /Boot/
         fcb   edition


;;  Load Quint (for Q.BfBegin)
;;  Assert BfSize, and get sz.
;;  
;;  F$SRqMem D=sz => U=begin
;;  current := begin
;;  
;;  LOOP:
;;  	Load Quint.
;;  	If BfEnd{ s } , return: X=begin D=sz
;;  
;;  	Assert BfChunk{ chunk_sz }
;;  
;;  	Read(current, chunk_sz }
;;  	current += chunk_sz
;;  
;;  GOTO LOOP;

start    pshs  u,y,dp
	clra
	tfr a,dp       ; we use DP=0.

  bsr ReadQuint
	ldd <QuintN    ; D<-sz

  os9 F$SRqMem
	stu <BeginPtr 
	stu <CurrPtr 

Loop
  bsr ReadQuint  ; read Q.BfChunk or Q.BfEnd quint.
	lda <Quint
	cmpa #Q.BfEnd
	beq Return
  
	ldx <CurrPtr
	ldy <QuintN
	bsr Tcp1Read     ; read data packet

	ldd <CurrPtr
	addd <QuintN
	std <CurrPtr

  bra Loop

* We return to the kernel with
*    X = address of bootfile
*    D = size of bootfile
Return
  clra           ; resets carry.
  ldx <BeginPtr
	ldd <QuintN
  puls  u,y,dp,pc

ReadQuint
	LDX #Quint
	LDY #$0005
	bsr Tcp1Read

**************************************************
*
*  {{{ The following is copied from github.com/n6il/cocoio-dw/dwread.asm
*  with the subroutine `DwRead` renamed to `Tcp1Read`
*  and the socket number changed from Socket 3 to Socket 1.
*
*  I suspect the code is by Michael Furman N6IL
*  rather than the name in the comment, which seems to refer to
*  serial drivewire instead of CocoIO ethernet.

S1_RX_BUF	equ	$4800
S1_TX_BUF	equ	$6800
SKBUFSIZE	equ	$800
SKBUFMASK	equ	$7ff

* Tcp1Read
*    Receive a response from the DriveWire server.
*    Times out if serial port goes idle for more than 1.4 (0.7) seconds.
*    Serial data format:  1-8-N-1
*    4/12/2009 by Darren Atkinson
*
* Entry:
*    X  = starting address where data is to be stored
*    Y  = number of bytes expected
*
* Exit:
*    CC = carry set on framing error, Z set if all bytes received
*    X  = starting address of data received
*    Y  = checksum
*    U is preserved.  All accumulators are clobbered

Tcp1Read
	pshs u
* space for variables on stack
	leas -10,s
	leau ,s

* temp	 	rmb 2  ,u
* rptr		rmb 2 2,u
* roffset	rmb 2 4,u
* rsize 	rmb 2 6,u
* len	 	rmb 2 8,u

* loop until sufficient bytes available
	sty ,u	* exptectd bytes => temp
	sty 8,u	* exptectd bytes => len
@loop
	ldd #S3_RX_RSR0
	std CIO0ADDR
	lda CIO0DATA
	sta 6,u	* rsize msb
	ldb CIO0DATA
	stb 7,u * rsize lsb
	subd ,u * S3_RX_RSR0 - temp
	blo @loop
* all bytes we want are available for reading now

* get current pointer in receive buffer
	ldd #S3_RX_RD0
	std CIO0ADDR
	lda CIO0DATA
	sta 2,u	* rptr msb
	ldb CIO0DATA
	stb 3,u * rptr lsb

* offset into receive buffer
* roffset = rptr & SKBUFMASK
	andd #SKBUFMASK
	std 4,u * roffset

* The receieve buffer is circular. Check if we need to read from it in two
*    parts or one
*  if(roffset + len > SKBUFMASK)
	sty ,u	* exptectd bytes => temp
	addd ,u	* roffset + temp	
	cmpd #SKBUFMASK
	ble once
twice
* 1) Read to end of buffer
	pshs y ; len
* rsize = SKBUFSIZE - roffset
	ldd #SKBUFSIZE
	subd 4,u * roffset
	std 6,u * rsize
* rgblkget(buf, sockp->skrbstrt + roffset, rsize)
	tfr d,y
	ldd 4,u * rofset
	addd #S1_RX_BUF
	std ,u  * temp
	bsr w51rd

* 2) Read remainder from beginning of buffer
* rgblkget(buf + rsize, sockp->skrbstrt, len - rsize)
	ldd #S1_RX_BUF
	std ,u * temp
	puls d * len
	subd 6,u * rsize
	tfr d,y	
	bra doonce
once
* rgblkget(buf, sockp->skrbstrt + roffset, len)
	ldd #S1_RX_BUF
	addd 4,u * roffset
	std ,u * temp
doonce
	bsr w51rd
advance
	ldd #S3_RX_RD0
	std CIO0ADDR
	ldd 8,u * len
	sta CIO0DATA
	stb CIO0DATA
rxdone
	leas 10,s
	puls u,pc


w51rd
* x - buf
* y - count
* temp rgaddr
	ldd ,u * temp
	std CIO0ADDR
	bra @check
@loop
	lda 	CIO0DATA
	sta	,x+
	leay -1,y
@check
	cmpy #0
	bne @loop
	rts

*  End copy from github.com/n6il/cocoio-dw/dwread.asm }}}
*
**************************************************

         emod
eom      equ   *

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

# notice for level1 we need the Old Color Basic ROM interrupt vectors.

cd ~/OS9/nitros9/level1/coco1/modules$

( echobyte 0 0 16 255 240 ; cat vectors ; dd bs=16 skip=511 if=~/6809/ROMS/Color_Basic_v1.0__1980___Tandy_.rom  ;    echobyte 0 14 212 48 0 ;  cat rel krn krnp2 init boot_lemma ; echobyte 255 0 0 48 2  ) > /tmp/boot

go run --tags=coco3,level2,cocoio,trace,hyper,display,d  gomar.go   --t=1 -loadm /tmp/boot    -v=w -basic_text  2>_

# Now it is waiting for TCP for the rest of the boot modules.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

go run --tags=coco3,level2,cocoio,trace,hyper,display,d  gomar.go --rom_8000 rom/BASIC3.ROM --cart /sy/frobio/frob2/netboot2.cart   --t=1   -v=w -basic_text  2>_

# reduce video size for Discord.
$ ffmpeg -i PXL_20230326_015753850.mp4  -n -fs 7950000 -fpsmax 5 -s 480x360 -b:a 120000 -b:v 200000  -metadata location="" -metadata location-eng=""   /tmp/output.mp4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

HOW I PUSHED TO BRANCH: ` git push origin HEAD:wip-dhcp3 `

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

lcb talk: 
kwikgen
  k utility
  b util
  keyclick on | off

  :files [m-s]*
  :echo [m-s]*


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RETURN OKAY: OS9KERNEL0 OS9$28 <F$SRqMem> {size=6a97} #416842 -> size $6b00 addr $8200 #418149

Block Offset Size Typ Rev Attr  Use Module Name
----- ------ ---- --- --- ---- ---- ------------
  3F    D06   12A  C1   5 r...    0 REL
  3F    E30   1D0  C1   1 r...    1 Boot
  3F   1000   EDF  C0   A r...    0 Krn
   1    200   D41  C0   0 r...    1 KrnP2
   1    F41   91A  C1   5 r...    1 IOMan
   1   185B    77  C0   0 r...    2 Init
   1   18D2  12EE  D1   3 r...    D RBF
   1   2BC0   77C  D1   0 r...    4 SCF
   1   333C   949  E1   0 r...    4 VTIO
   1   3C85   24C  C1   0 r...    1 KeyDrv
   1   3ED1    BF  C1   0 r...    1 SndDrv
   1   3F90   19A  C1   0 r...    1 JoyDrv
   1   412A  1F52  C1   0 r...    1 CoWin
   1   607C    44  F1   0 r...    4 Term
   1   60C0    41  F1   0 r...    0 W
   1   6101    42  F1   0 r...    0 W1
   1   6143    42  F1   0 r...    0 W2
   1   6185    42  F1   0 r...    0 W3
   1   61C7    42  F1   0 r...    0 W4
   1   6209    42  F1   0 r...    0 W5
   1   624B    42  F1   0 r...    0 W6
   1   628D    42  F1   0 r...    0 W7
   1   62CF   207  C1   5 r...    1 Clock
   1   64D6    66  21   0 r...    1 Clock2
   1   653C   1FF  11   3 r...    1 SysGo
   1   673B   537  E1   1 r...    D RBLemma
   1   6C72    25  F1   0 r...    D DD
   5      0  2332  C1   1 r...    1 GrfDrv
   8      0  1B57  11   0 r...    2 Shell
   8   1B57    F1  11   0 r...    0 Date
   8   1C48    53  11   0 r...    0 DeIniz
   8   1C9B    22  11   1 r...    0 Echo
   8   1CBD    47  11   0 r...    0 Iniz
   8   1D04    2C  11   0 r...    0 Link
   8   1D30    24  11   0 r...    0 Load
   8   1D54    67  11   0 r...    0 Save
   8   1DBB    27  11   0 r...    0 Unlink
   C      0   1FF  11   0 r...    1 Attr
   C    1FF    54  11   0 r...    0 Build
   C    253   5BD  11   0 r...    0 Copy
   C    810    67  11   0 r...    0 Del
   C    877   272  11   0 r...    0 Deldir
   C    AE9   3A1  11   0 r...    0 Dir
   C    E8A    FE  11   1 r...    0 Display
   C    F88    4F  11   0 r...    0 List
   C    FD7    AF  11   0 r...    0 MakDir
   C   1086   2ED  11   1 r...    1 MDir
   C   1373    DD  11   0 r...    0 Merge
   C   1450   1EA  11   0 r...    0 Mfree
   C   163A   337  11   0 r...    0 Procs
   C   1971   11D  11   0 r...    0 Rename
   C   1A8E   2A4  11   0 r...    0 TMode

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

https://github.com/speccytools/spectranet-index-module

How does it work?
It uses DNS (TXT) records of several indexes.

;; QUESTION SECTION:
;index.speccytools.org.		IN	TXT

;; ANSWER SECTION:
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=nihirash.net;title=Gopher client;tags=web"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=szeliga.zapto.org;title=IRC client, up-to-date game list;tags=web,games"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=tnfs.markround.com;title=Good things, and the easiest big database search;tags=games,web,demos,tools"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=zx.cm7.ch;title=Online Feeds;tags=web"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=vexed4.alioth.net;title=The original and spiritual home of the Spectranet"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=sickbay.ddns.net;title=Sickbay, a cosy corner of the Internet"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=retrojen.org;title=Experimental site"
index.speccytools.org.	93	IN	TXT	"type=version;host=boot.speccytools.org;title=0.1"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=zx.zapto.org;title=A strange celebration of crap BASIC"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=tnfs.millhill.org;title=Tribute to the old Kupo TNFS service / TOSEC browser"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=irata.online;title=Platoterm terminal / bulletin service"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=zx.desertkun.in;title=ZX Spectrum browser for forums and imageboards;tags=web"
index.speccytools.org.	93	IN	TXT	"type=tnfs;host=tnfs.bytedelight.com;title=Everything for your ZX Spectrum;tags=tools"
index.speccytools.org.	93	IN	TXT	"type=index;host=index2.speccytools.org"
The index has several TXT records assigned to the same index domain. Every record follows simple key=value;key2=value format.

The following types are supported:

tnfs describe a TNFS resource. title for resource description, host for its mount point, tags for resource tags.
index a reference to another index which is recursively called, ideally, maintained by different party.
One index can refer to another one, thus providing a way to maintain a list of TNFS resources by several independent parties.

How to submit a TNFS resource?
If you want to add a resource to the list, or you want to maintain an additional index, join the tg group here: @index_speccytools_org

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
